import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';


const Color standardTextLight = Color(0xFF001F2A);
const Color standardTextDark = Color(0xFFBFE9FF);

TextTheme textThemeLight = TextTheme(
  displayLarge: TextStyle(debugLabel: 'Nunito displayLarge', fontFamily: GoogleFonts.nunito().fontFamily, decoration: TextDecoration.none, letterSpacing: -5, fontSize: 72, color: standardTextLight),
  displayMedium: TextStyle(debugLabel: 'Nunito displayMedium',fontFamily: GoogleFonts.nunito().fontFamily,decoration: TextDecoration.none, color: standardTextLight),
  displaySmall: TextStyle(debugLabel: 'Nunito displaySmall',fontFamily: GoogleFonts.nunito().fontFamily,decoration: TextDecoration.none, color: standardTextLight),
  headlineLarge: TextStyle(debugLabel: 'workSans headlineLarge', fontFamily: GoogleFonts.nunito().fontFamily, decoration: TextDecoration.none, letterSpacing: -2, color: standardTextLight),
  headlineMedium: TextStyle(debugLabel: 'Nunito headlineMedium',fontFamily: GoogleFonts.nunito().fontFamily,decoration: TextDecoration.none, color: standardTextLight),
  headlineSmall: TextStyle(debugLabel: 'Nunito headlineSmall',fontFamily: GoogleFonts.nunito().fontFamily,decoration: TextDecoration.none, color: standardTextLight),
  titleLarge: TextStyle(debugLabel: 'Nunito titleLarge',fontFamily: GoogleFonts.nunito().fontFamily,fontWeight: FontWeight.w600,decoration: TextDecoration.none, color: standardTextLight),
  titleMedium: TextStyle(debugLabel: 'Nunito titleMedium',fontFamily: GoogleFonts.nunito().fontFamily,fontWeight: FontWeight.w600,decoration: TextDecoration.none, color: standardTextLight),
  titleSmall: TextStyle(debugLabel: 'Nunito titleSmall',fontFamily: GoogleFonts.nunito().fontFamily,fontWeight: FontWeight.w500,decoration: TextDecoration.none, color: standardTextLight),
  bodyLarge: TextStyle(debugLabel: 'Nunito bodyLarge',fontFamily: GoogleFonts.nunito().fontFamily,decoration: TextDecoration.none, color: standardTextLight),
  bodyMedium: TextStyle(debugLabel: 'Nunito bodyMedium',fontFamily: GoogleFonts.nunito().fontFamily,decoration: TextDecoration.none, color: standardTextLight),
  bodySmall: TextStyle(debugLabel: 'Nunito bodySmall',fontFamily: GoogleFonts.nunito().fontFamily,decoration: TextDecoration.none, color: standardTextLight),
  labelLarge: TextStyle(debugLabel: 'Nunito labelLarge',fontFamily: GoogleFonts.nunito().fontFamily,decoration: TextDecoration.none, color: standardTextLight),
  labelMedium: TextStyle(debugLabel: 'workSans labelMedium',fontFamily: GoogleFonts.nunito().fontFamily,decoration: TextDecoration.none, color: standardTextLight),
  labelSmall: TextStyle(debugLabel: 'Nunito labelSmall', fontFamily: GoogleFonts.nunito().fontFamily, decoration: TextDecoration.none, letterSpacing: -0.3, color: standardTextLight),
);

TextTheme textThemeDark = TextTheme(
  displayLarge: TextStyle(debugLabel: 'Nunito displayLarge', fontFamily: GoogleFonts.nunito().fontFamily, decoration: TextDecoration.none, letterSpacing: -5, fontSize: 72,  color: standardTextDark),
  displayMedium: TextStyle(debugLabel: 'Nunito displayMedium',fontFamily: GoogleFonts.nunito().fontFamily,decoration: TextDecoration.none,color: standardTextDark),
  displaySmall: TextStyle(debugLabel: 'Nunito displaySmall',fontFamily: GoogleFonts.nunito().fontFamily,decoration: TextDecoration.none,color: standardTextDark),
  headlineLarge: TextStyle(debugLabel: 'workSans headlineLarge', fontFamily: GoogleFonts.nunito().fontFamily, decoration: TextDecoration.none, letterSpacing: -2,color: standardTextDark),
  headlineMedium: TextStyle(debugLabel: 'Nunito headlineMedium',fontFamily: GoogleFonts.nunito().fontFamily,decoration: TextDecoration.none,color: standardTextDark),
  headlineSmall: TextStyle(debugLabel: 'Nunito headlineSmall',fontFamily: GoogleFonts.nunito().fontFamily,decoration: TextDecoration.none,color: standardTextDark),
  titleLarge: TextStyle(debugLabel: 'Nunito titleLarge',fontFamily: GoogleFonts.nunito().fontFamily,fontWeight: FontWeight.w600,decoration: TextDecoration.none,color: standardTextDark),
  titleMedium: TextStyle(debugLabel: 'Nunito titleMedium',fontFamily: GoogleFonts.nunito().fontFamily,fontWeight: FontWeight.w600,decoration: TextDecoration.none,color: standardTextDark),
  titleSmall: TextStyle(debugLabel: 'Nunito titleSmall',fontFamily: GoogleFonts.nunito().fontFamily,fontWeight: FontWeight.w500,decoration: TextDecoration.none,color: standardTextDark),
  bodyLarge: TextStyle(debugLabel: 'Nunito bodyLarge',fontFamily: GoogleFonts.nunito().fontFamily,decoration: TextDecoration.none,color: standardTextDark),
  bodyMedium: TextStyle(debugLabel: 'Nunito bodyMedium',fontFamily: GoogleFonts.nunito().fontFamily,decoration: TextDecoration.none,color: standardTextDark),
  bodySmall: TextStyle(debugLabel: 'Nunito bodySmall',fontFamily: GoogleFonts.nunito().fontFamily,decoration: TextDecoration.none,color: standardTextDark),
  labelLarge: TextStyle(debugLabel: 'Nunito labelLarge',fontFamily: GoogleFonts.nunito().fontFamily,decoration: TextDecoration.none,color: standardTextDark),
  labelMedium: TextStyle(debugLabel: 'workSans labelMedium',fontFamily: GoogleFonts.nunito().fontFamily,decoration: TextDecoration.none,color: standardTextDark),
  labelSmall: TextStyle(debugLabel: 'Nunito labelSmall', fontFamily: GoogleFonts.nunito().fontFamily, decoration: TextDecoration.none, letterSpacing: -0.3, color: standardTextDark),
);

const lightColorScheme = ColorScheme(
  brightness: Brightness.light,
  primary: Color(0xFF3474ef),
  onPrimary: Color(0xFFccccff),
  primaryContainer: Color(0xFFDDE1FF),
  onPrimaryContainer: Color(0xFF001356),
  secondary: Color(0xFFB90063),
  onSecondary: Color(0xFFFFFFFF),
  secondaryContainer: Color(0xFFFFD9E2),
  onSecondaryContainer: Color(0xFF3E001D),
  tertiary: Color(0xFF6E4DA1),
  onTertiary: Color(0xFFFFFFFF),
  tertiaryContainer: Color(0xFFECDCFF),
  onTertiaryContainer: Color(0xFF280057),
  error: Color(0xFFBA1A1A),
  errorContainer: Color(0xFFFFDAD6),
  onError: Color(0xFFFFFFFF),
  onErrorContainer: Color(0xFF410002),
  background: Color(0xFFFAFCFF),
  onBackground: Color(0xFF001F2A),
  surface: Color(0xFFFAFCFF),
  onSurface: Color(0xFF001F2A),
  surfaceVariant: Color(0xFFE2E1EC),
  onSurfaceVariant: Color(0xFF45464F),
  outline: Color(0xFF767680),
  onInverseSurface: Color(0xFFE1F4FF),
  inverseSurface: Color(0xFF003547),
  inversePrimary: Color(0xFFB9C3FF),
  shadow: Color(0xFF000000),
  surfaceTint: Color(0xFF2F51D5),
  // outlineVariant: Color(0xFFC6C5D0),
  // scrim: Color(0xFF000000),
);


const darkColorScheme = ColorScheme(
  brightness: Brightness.dark,
  primary: Color(0xFFB9C3FF),
  onPrimary: Color(0xFF002389),
  primaryContainer: Color(0xFF0435BD),
  onPrimaryContainer: Color(0xFFDDE1FF),
  secondary: Color(0xFFFFB1C8),
  onSecondary: Color(0xFF650033),
  secondaryContainer: Color(0xFF8E004A),
  onSecondaryContainer: Color(0xFFFFD9E2),
  tertiary: Color(0xFFD6BAFF),
  onTertiary: Color(0xFF3E1C6F),
  tertiaryContainer: Color(0xFF553587),
  onTertiaryContainer: Color(0xFFECDCFF),
  error: Color(0xFFFFB4AB),
  errorContainer: Color(0xFF93000A),
  onError: Color(0xFF690005),
  onErrorContainer: Color(0xFFFFDAD6),
  background: Color(0xFF001F2A),
  onBackground: Color(0xFFBFE9FF),
  surface: Color(0xFF173342),
  onSurface: Color(0xFFBFE9FF),
  surfaceVariant: Color(0xFF45464F),
  onSurfaceVariant: Color(0xFFC6C5D0),
  outline: Color(0xFF90909A),
  onInverseSurface: Color(0xFF001F2A),
  inverseSurface: Color(0xFFBFE9FF),
  inversePrimary: Color(0xFF2F51D5),
  shadow: Color(0xFF000000),
  surfaceTint: Color(0xFFB9C3FF),
  // outlineVariant: Color(0xFF45464F),
  // scrim: Color(0xFF000000),
);